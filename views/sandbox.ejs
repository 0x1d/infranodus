<!DOCTYPE html>
<html>
<head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
</head>
<body>
<% include menu %>
<div id="graph-container"></div>

<div id='content'>
<h1><%= title %></h1>
<p>An example of Sigma.Js</p>

<script src="/javascripts/sigma/sigma.min.js"></script>
<script src="/javascripts/sigma/plugins/sigma.parsers.json.min.js"></script>
<script src="/javascripts/sigma/plugins/sigma.layout.forceAtlas2.min.js"></script>
<script src="//js.leapmotion.com/leap-0.4.1.js"></script>


    <script>
    var g = {
                nodes: [],
                edges: []
            };

    s = new sigma({
        graph: g,
        container: 'graph-container',
        renderer: {
            container: document.getElementById('graph-container'),
            renderer: "canvas"
        },
        settings: {
            minNodeSize: 8,
            maxNodeSize: 16
        }
    });


    sigma.parsers.json(
            '/api/user/nodes',
            s,
            function() {
               var i,
                        nodes = s.graph.nodes(),
                        len = nodes.length;

                for (i = 0; i < len; i++) {
                    nodes[i].x = Math.random();
                    nodes[i].y = Math.random();
                    nodes[i].size = s.graph.degree(nodes[i].id);
                    nodes[i].color = nodes[i].center ? '#333' : '#666';
                }

                // Refresh the display:
                s.refresh();
                s.startForceAtlas2();

                /*setTimeout(function() {
                    s.stopForceAtlas2();
                },2000);     */
                /*
                var controller = new Leap.Controller({enableGestures: true,animationFrame:5});
                var firstValidFrame = null;
                var defaultRatio = s.cameras[0].ratio;

                controller.connect();
                controller.on('gesture', onGesture);
                function onGesture(gesture,frame)
                {
                    if (gesture.type === 'keyTap' || gesture.type === 'screenTap') {
                    controller.loop(function(frame) {
                        if (!firstValidFrame && frame.valid) firstValidFrame = frame;
                        var translation = frame.translation(firstValidFrame);
                        // console.log(translation);

                        s.cameras[0].x = -translation[0];
                        s.cameras[0].y = translation[1];

                        if (translation[2] > 10) {
                            s.cameras[0].ratio = defaultRatio - (2* translation[2]/(360));
                        }
                        if (translation[2] < -10) {
                            s.cameras[0].ratio = defaultRatio - (translation[2]/(360*2));
                        }




                    });
                    console.log(gesture.type + " with ID " + gesture.id + " in frame " + frame.id);
                    }

                    if (gesture.type === 'circle') {
                        console.log(gesture.type + " with ID " + gesture.id + " in frame " + frame.id);

                    }
                }
                */


                var defaultRatio = s.cameras[0].ratio;

                var firstValidFrame = null;

                var started = null;



                var controller = new Leap.Controller({enableGestures: true});


                controller.loop(function(frame) {
                    if(frame.hands.length > 0)
                    {
                        if (!firstValidFrame && frame.valid) firstValidFrame = frame;

                        // https://developer.leapmotion.com/documentation/javascript/api/Leap.Hand.html

                        var hand = frame.hands[0];
                        var position = hand.stabilizedPalmPosition;
                        var fingers = hand.fingers;
                        var center = hand.sphereCenter;

                        console.log(center);

                        if (position[2] < 60) {
                            started = 1;
                        }

                        if (fingers.length > 2 && started) {
                            s.cameras[0].x =  - position[0]*2;
                            s.cameras[0].y = position[1]*2-360;
                            s.cameras[0].ratio = defaultRatio - (position[2]*2/360);

                        }





                    }




                });





            }
    );






</script>

</div>
</body>
</html>