<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, height=device-height, initial-scale=1">
    <title>fullPage.js One Page Scroll Sites</title>
    <meta name="author" content="Alvaro Trigo Lopez" />
    <meta name="description" content="fullPage plugin by Alvaro Trigo. Create fullscreen pages fast and simple. One page scroll like iPhone website." />
    <meta name="keywords"  content="fullpage,jquery,alvaro,trigo,plugin,fullscren,screen,full,iphone5,apple" />
    <meta name="Resource-type" content="Document" />


    <link rel="stylesheet" type="text/css" href="/stylesheets/jquery.fullPage.css" />
    <link rel="stylesheet" type="text/css" href="/stylesheets/fullPage.extras.css" />


    <style>

            /* Sections
             * --------------------------------------- */
        #section0 img,
        #section1 img{
            margin: 20px 0 0 0;
        }
        #section2 img{
            margin: 20px 0 0 52px;
        }
        #section3 img{
            bottom: 0px;
            position: absolute;
            margin-left: -420px;
        }
        .intro p{
            width: 50%;
            margin: 0 auto;
            font-size: 1.5em;
            z-index:10;
        }
        .twitter-share-button{
            position: absolute;
            z-index: 99;
            right: 149px;
            top: 9px;
        }

        #section1{
            background: -webkit-gradient(linear, top left, bottom left, from(#7baabe), to(#969ac6));
            background: -webkit-linear-gradient(#7BAABE, #969AC6);
            background: linear-gradient(#9799f8,#f2bee7);
        }
        #section2{
            background: -webkit-gradient(linear, top left, bottom left, from(#969ac6), to(#636F8F));
            background: -webkit-linear-gradient(#969AC6, #636F8F);
            background: linear-gradient(#969AC6,#636F8F);
        }
        #section0{
            background: linear-gradient(#efe9e9,#e0e3e3);
        }
        #demo-canvas {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 1;
        }
        #slide2{
            background: -webkit-gradient(linear, top left, bottom left, from(#d7cdea), to(#f874d3));
            background: -webkit-linear-gradient(#d7cdea, #f874d3);
            background: linear-gradient(#b8d3f5,#8992b6);
        }
        #slide3{
            background: -webkit-gradient(linear, top left, bottom left, from(#92a1ca), to(#76c2bd));
            background: -webkit-linear-gradient(#92a1ca, #76c2bd);
            background: linear-gradient(#7BAABE,#969AC6);
        }


    </style>
    <!--[if IE]>
    <script type="text/javascript">
        var console = { log: function() {} };
    </script>
    <![endif]-->

    <script src="/javascripts/jquery.min.js"></script>
    <script src="/javascripts/jquery-ui.min.js"></script>
    <script src="/javascripts/TweenLite.min.js"></script>
    <script src="/javascripts/EasePack.min.js"></script>

    <script type="text/javascript" src="/javascripts/jquery.fullPage.js"></script>
    <script type="text/javascript">
        $(document).ready(function() {
            $('#fullpage').fullpage({
                anchors: ['home', 'features', 'usecases', 'graphs', 'about'],
                menu: '#menu',
                scrollingSpeed: 1000
            });

           /* $('#content-box').animate({scrollLeft: 100}, 800);*/

            $(".menuhit").click(function(){
                var moveby = $(this).position().left;
                $('#content-box').animate({scrollLeft: moveby-10}, 800);
                return true;
            });

            var width, height, canvas, ctx, points, target, animateHeader = true;

            // Main
            initHeader();
            initAnimation();
            addListeners();

            function initHeader() {
                width = window.innerWidth;
                height = window.innerHeight;
                target = {x: width/2, y: height/2};

                //console.log("test",document.getElementById('large-header'));

                canvas = document.getElementById('demo-canvas');
                canvas.width = width;
                canvas.height = height;
                ctx = canvas.getContext('2d');

                // create points
                points = [];
                for(var x = 0; x < width; x = x + width/20) {
                    for(var y = 0; y < height; y = y + height/20) {
                        var px = x + Math.random()*width/20;
                        var py = y + Math.random()*height/20;
                        var p = {x: px, originX: px, y: py, originY: py };
                        points.push(p);
                    }
                }

                // for each point find the 5 closest points
                for(var i = 0; i < points.length; i++) {
                    var closest = [];
                    var p1 = points[i];
                    for(var j = 0; j < points.length; j++) {
                        var p2 = points[j]
                        if(!(p1 == p2)) {
                            var placed = false;
                            for(var k = 0; k < 6; k++) {
                                if(!placed) {
                                    if(closest[k] == undefined) {
                                        closest[k] = p2;
                                        placed = true;
                                    }
                                }
                            }

                            for(var k = 0; k < 6; k++) {
                                if(!placed) {
                                    if(getDistance(p1, p2) < getDistance(p1, closest[k])) {
                                        closest[k] = p2;
                                        placed = true;
                                    }
                                }
                            }
                        }
                    }
                    p1.closest = closest;
                }

                // assign a circle to each point
                for(var i in points) {
                    var c = new Circle(points[i], 2+Math.random()*10, 'rgba(255,255,255,0.3)');
                    points[i].circle = c;
                }
            }

            // Event handling
            function addListeners() {
                if(!('ontouchstart' in window)) {
                    window.addEventListener('mousemove', mouseMove);
                }
                window.addEventListener('scroll', scrollCheck);
                window.addEventListener('resize', resize);
            }

            function mouseMove(e) {
                var posx = posy = 0;
                if (e.pageX || e.pageY) {
                    posx = e.pageX;
                    posy = e.pageY;
                }
                else if (e.clientX || e.clientY)    {
                    posx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;
                    posy = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;
                }
                target.x = posx;
                target.y = posy;
            }

            function scrollCheck() {
                if(document.body.scrollTop > height) animateHeader = false;
                else animateHeader = true;
            }

            function resize() {
                width = window.innerWidth;
                height = window.innerHeight;
                canvas.width = width;
                canvas.height = height;
            }

            // animation
            function initAnimation() {
                animate();
                for(var i in points) {
                    shiftPoint(points[i]);
                }
            }

            function animate() {
                if(animateHeader) {
                    ctx.clearRect(0,0,width,height);
                    for(var i in points) {
                        // detect points in range
                        if(Math.abs(getDistance(target, points[i])) < 4000) {
                            points[i].active = 0.3;
                            points[i].circle.active = 0.8;
                        } else if(Math.abs(getDistance(target, points[i])) < 20000) {
                            points[i].active = 0.1;
                            points[i].circle.active = 0.5;
                        } else if(Math.abs(getDistance(target, points[i])) < 40000) {
                            points[i].active = 0.02;
                            points[i].circle.active = 0.3;
                        } else {
                            points[i].active = 0;
                            points[i].circle.active = 0;
                        }

                        drawLines(points[i]);
                        points[i].circle.draw();
                    }
                }
                requestAnimationFrame(animate);
            }

            function shiftPoint(p) {
                TweenLite.to(p, 1+1*Math.random(), {x:p.originX-50+Math.random()*100,
                    y: p.originY-50+Math.random()*100, ease:Circ.easeInOut,
                    onComplete: function() {
                        shiftPoint(p);
                    }});
            }

            // Canvas manipulation
            function drawLines(p) {
                if(!p.active) return;
                for(var i in p.closest) {
                    ctx.beginPath();
                    ctx.moveTo(p.x, p.y);
                    ctx.lineTo(p.closest[i].x, p.closest[i].y);
                    ctx.strokeStyle = 'rgba(156,217,249,'+ p.active+')';
                    ctx.stroke();
                }
            }

            function Circle(pos,rad,color) {
                var _this = this;

                // constructor
                (function() {
                    _this.pos = pos || null;
                    _this.radius = rad || null;
                    _this.color = color || null;
                })();

                this.draw = function() {
                    if(!_this.active) return;
                    ctx.beginPath();
                    ctx.arc(_this.pos.x, _this.pos.y, _this.radius, 0, 2 * Math.PI, false);
                    ctx.fillStyle = 'rgba(156,217,249,'+ _this.active+')';
                    ctx.fill();
                };
            }

            // Util
            function getDistance(p1, p2) {
                return Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2);
            }

        });
    </script>

</head>
<body>

<div id="content-box">
<ul id="menu">
    <li data-menuanchor="home"><a href="#home" class="menuhit">InfraNodus</a></li>
    <li data-menuanchor="features"><a href="#features" class="menuhit">Features</a></li>
    <li data-menuanchor="usecases"><a href="#usecases" class="menuhit">Solutions</a></li>
    <li data-menuanchor="graphs"><a href="#graphs" class="menuhit">Graphs</a></li>
    <li data-menuanchor="about"><a href="#about" class="menuhit">Origins</a></li>
</ul>
</div>


<div id="fullpage">
    <div class="section " id="section0">
        <canvas id="demo-canvas" height="100%" width="100vh"></canvas>
        <div class="ontop">
            <h1>InfraNodus</h1>
            <p>See how it all connects.</p>
            <ul id="menu" class="profile">
            <li><a href="/login">Enter</a></li>
            <li><a href="/signup">Join</a></li>
            </ul>
       </div>
    </div>
    <div class="section" id="section1">
        <div class="slide">
            <div class="intro">
                <h1>Speech to Network</h1>
                <p>Reveal patterns in text, identify main topics, generate ideas.</p>
                <br>&nbsp;
                <!--<iframe src="//coub.com/embed/5uv90?muted=false&autostart=false&originalSize=false&hideTopBar=true&startWithHD=false" allowfullscreen="true" frameborder="0" width="100%" height="100%"></iframe>-->
            </div>

        </div>
        <div class="slide">
            <div class="intro">
                <h1>Memory Graph</h1>
                <p>Connect new ideas to each other to keep track of them better.</p>
                <br>&nbsp;
                <!--<iframe src="//coub.com/embed/5r18a?muted=false&autostart=false&originalSize=false&hideTopBar=false&startWithHD=false" allowfullscreen="true" frameborder="0" width="100%" height="100%"></iframe>-->
            </div>
        </div>
        <div class="slide">
            <div class="intro">
                <!--<h1>Augmented Perception</h1>-->
                <h1>Nonlinear Reading</h1>
                <p>Quickly find the fragments in context, weave your own narratives.</p>
                <br>&nbsp;
                <!--<iframe src="//coub.com/embed/5r0tt?muted=false&autostart=false&originalSize=false&hideTopBar=false&startWithHD=false" allowfullscreen="true" frameborder="0" width="100%" height="100%"></iframe>-->
            </div>
        </div>
        <div class="slide">
            <div class="intro">
                <!--<h1>Cognitive Enrichment</h1>-->
                <h1>Graph Talk</h1>
                <p>Visual feedback on conversations to never lose track of ideas.</p>
                <br>&nbsp;
                <!--<iframe src="//coub.com/embed/5r18a?muted=false&autostart=false&originalSize=false&hideTopBar=false&startWithHD=false" allowfullscreen="true" frameborder="0" width="100%" height="100%"></iframe>-->
            </div>
        </div>


    </div>
    <div class="section" id="section2">
        <div class="slide">
            <div class="intro">
                <h1>Thinking</h1>
                <p>Visualize connections between your thoughts to make sense of them.</p>
                <ul id="menu" class="profile">
                    <li><a href="http://noduslabs.com/cases/how-to-write-essay-inspiration-text-network-visualization/" target="_blank">Tutorial</a></li>
                </ul>
            </div>
        </div>
        <div class="slide" id="slide2">
            <div class="intro">
                <h1>Writing</h1>
                <p>Organize and store disjointed bits and pieces of information.</p>
                <!--<p>Discover patterns in your ideas, excerpts and notes, gaining a better understanding of your research field.</p>-->
                <ul id="menu" class="profile">
                    <li><a href="http://noduslabs.com/cases/connect-ideas-research-notes-graph/" target="_blank">Tutorial</a></li>
                </ul>
            </div>
        </div>
        <div class="slide" id="slide3">
            <div class="intro">
                <h1>Research</h1>
                <p>Identify gaps in your knowledge to ask the right questions.</p>
                <!--<p>Discover patterns in your ideas, excerpts and notes, gaining a better understanding of your research field.</p>-->
                <ul id="menu" class="profile">
                    <li><a href="http://noduslabs.com/cases/connect-ideas-research-notes-graph/" target="_blank">Tutorial</a></li>
                </ul>
            </div>
        </div>

        <div class="slide">
            <div class="intro">
                <h1>SEO</h1>
                <p>Find the right combinations of keywords to boost SEO levels.</p>
                <ul id="menu" class="profile">
                    <li><a href="http://noduslabs.com/cases/seo-tutorial-keyword-visualization-search-engine-optimization/" target="_blank">Tutorial</a></li>
                </ul>
            </div>
        </div>
        <div class="slide">
            <div class="intro">
                <h1>Dialogue</h1>
                <p>Using visual feedback to bring in more choices into a conversation.</p>
                <ul id="menu" class="profile">
                    <li><a href="http://noduslabs.com/cases/text-network-visualization-psychotherapy/" target="_blank">Tutorial</a></li>
                </ul>
            </div>
        </div>
        <div class="slide">
            <div class="intro">
                <h1>SMM</h1>
                <p>Quick visual summary of online discourse.</p>
                <ul id="menu" class="profile">
                    <li><a href="http://noduslabs.com/cases/twitter-xray-text-network-analysis/" target="_blank">Tutorial</a></li>
                </ul>
            </div>
        </div>
    </div>
    <div class="section" id="section3">
        <div class="intro">
           <!-- <div class="slide">
                <div class="inside">
                    <iframe width="100%" height="100%" class="embed" src="https://infranodus.com/infragraph/philosophy?go_next_site=wikipedia&hide_always=1&link_hashtags=1&go_next_override=1&maxnodes=40" frameborder="0" allowfullscreen></iframe>
                    <div class="overlay">
                        <div class="intro">
                            <h2>Philosophers Graph</h2>
                            <p class="caption">The relations show which philosophers people search for together more often.</p>
                            <ul id="menu" class="profile">
                                <li><a href="https://infranodus.com/infragraph/philosophy?go_next_site=wikipedia&hide_always=1&link_hashtags=1&go_next_override=1" target="_blank">Explore</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>-->
            <div class="slide">
                <div class="intro">
                    <h1>Explore Topics</h1>
                    <p>Use the graphs to explore and share various topics.</p>
                    <br>&nbsp;

                </div>
            </div>
            <div class="slide">
                <div class="intro">
                    <h1>Explore</h1>
                    <p>Explore more graphs with explanation.</p>
                    <br>&nbsp;
                    <ul id="menu" class="profile">
                        <li><a href="http://noduslabs.com/network-graphs/" target="_blank">Learn More</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <div class="section" id="section4">
        <div class="intro">
            <h1>Working On Tablets</h1>
            <p>
                Designed to fit to different screen sizes as well as tablet and mobile devices.
                <br /><br /><br /><br /><br /><br />
            </p>
        </div>
        <img src="imgs/tablets.png" alt="tablets" />
    </div>
</div>

</body>
</html>
