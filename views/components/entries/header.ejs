<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimal-ui">
    <title><%= title %></title>
    <script src="/javascripts/jquery.min.js"></script>
    <script>

    // Initiate Global User Settings

    let userFactory = new UserFactory();

    function UserFactory(){

        let loggedInUser = null;
        let watchedUser = null;
        let currentUser = '';
        let currentContext = '';
        let viewType = 'internal';
        let selfPosted = null;
        let forwardTo = 'https://www.google.com/search?q=';
        let hostSite = '';
        let addContext = '';
        let jsonPath = '';
        let maxNodes = '';
        let most_influential = 'bc';
        let graphPalette = '';
        let walkthroughtype = '';
        let inlanguage = 'auto';
        let in_label_threshold = 8;
        let midi = null;
        let background = null;
        let default_label_color = '#000000';

        this.getLoggedInUser = function() {
            return loggedInUser;
        }    
        this.setLoggedInUser = function(name) {
            loggedInUser = name;
        }

        this.getCurrentUser = function() {
            return currentUser;
        }
        this.setCurrentUser = function(name) {
            currentUser = name;
        }

        this.getCurrentContext = function() {
            return currentContext;
        }
        this.setCurrentContext = function(name) {
            currentContext = name;
        }

        this.getWatchedUser = function() {
            return watchedUser;
        }  
        this.setWatchedUser = function(name) {
            watchedUser = name;
        }

        this.setViewType = function(type) {
            viewType = type;
            return true;
        }
        this.getViewType = function() {
            return viewType;
        }

        this.getSelfPosted = function() {
            return selfPosted;
        }
        this.updateSelfPosted = function(value) {
            selfPosted = value;
            return true;
        }

        this.setForwardTo = function(url) {
            forwardTo = url;
        }          
        this.getForwardTo = function() {
            return forwardTo;
        }  

        this.setHostSite = function(url) {
            hostSite = url;
        }          
        this.getHostSite = function() {
            return hostSite;
        }  

        this.setAddContext = function(name) {
            addContext = name;
        }          
        this.getAddContext = function() {
            return addContext;
        }  

        this.setJsonPath = function(url) {
            jsonPath = url;
        }          
        this.getJsonPath = function() {
            return jsonPath;
        }  

        this.setMaxNodes = function(nodes) {
            maxNodes = nodes;
        }          
        this.getMaxNodes = function() {
            return maxNodes;
        }  

        this.setMostInfluential = function(flag) {
            most_influential = flag;
        }
        this.getMostInfluential = function() {
            return most_influential;
        }

        this.setGraphPalette = function(flag) {
            graphPalette = flag;
        }
        this.getGraphPalette = function() {
            return graphPalette;
        }

        this.setWalkthrough = function(flag) {
            walkthroughtype = flag;
        }
        this.getWalkthrough = function() {
            return walkthroughtype;
        }

        this.setInLanguage = function(lang) {
            inlanguage = lang;
        }
        this.getInLanguage = function() {
            return inlanguage;
        }

        this.setLabelThreshold = function(num) {
            in_label_threshold = num;
        }
        this.getLabelThreshold = function() {
            return in_label_threshold;
        }

        this.setMidi = function(flag) {
            midi = flag;
        }
        this.getMidi = function() {
            return midi;
        }

        this.setBackground = function(type) {
            background = type;
        }
        this.getBackground = function() {
            return background;
        }

        this.setGraphLabelColor = function(color) {
            default_label_color = color;
        }
        this.getGraphLabelColor = function() {
            return default_label_color;
        }

    }

    // Are we logged in?
    <% if (receivername) { %>
    userFactory.setLoggedInUser('<%= receivername %>');
    <% } %> 

    // Set the current user
    userFactory.setCurrentUser(window.location.pathname.replace(/^\/([^\/]*).*$/, '$1'));
    
    // Set the current context
    userFactory.setCurrentContext('<%= context %>');
    
    // Set the current hostsite
    userFactory.setHostSite(window.location.host);

    // default most influential nodes are displayed according to Betwenness Centrality (bc) or Degree (degree)
    userFactory.setMostInfluential('bc');

    // Is the user going to look at somebody else's graph?
    <% if (perceivername) { %>
        // Are we watching somebody else's graph?
        userFactory.setViewType('external');
        userFactory.setWatchedUser('<%= perceivername %>');

        userFactory.setWalkthrough('external');
        <% if (showcontexts && maxnodes) { %>
        userFactory.setJsonPath('/api/public/nodes/<%= perceivername %>/<%= context %>?showcontexts=<%= showcontexts %>&maxnodes=<%= maxnodes %>');
        <% } else if (showcontexts) { %>
        userFactory.setJsonPath('/api/public/nodes/<%= perceivername %>/<%= context %>?showcontexts=<%= showcontexts %>');
        <% } else if (maxnodes) { %>
        userFactory.setJsonPath('/api/public/nodes/<%= perceivername %>/<%= context %>?maxnodes=<%= maxnodes %>');
        <% } else  { %>
        <% if (locals.vieweduser && vieweduser.maxnodes) { %>
        userFactory.setMaxNodes('<%= vieweduser.maxnodes %>');
        userFactory.setJsonPath('/api/public/nodes/<%= perceivername %>/<%= context %>?maxnodes=<%= vieweduser.maxnodes %>');
        <% } else { %>
        userFactory.setJsonPath('/api/public/nodes/<%= perceivername %>/<%= context %>');
        <% } %>
    <% } %>
    <% } else { %>
        // Get the setting from user DB how many max nodes we show
        <% if (maxnodes) { %>
        userFactory.setMaxNodes('<%= maxnodes %>');
        <% } %>
        // Path to the JSON graph file (specific context or a general one)
        <% if (addcontext) { %>
        userFactory.setJsonPath('/api/user/nodes/<%= context %>?addcontext=<%= addcontext %>');
        userFactory.setAddContext('<%= addcontext %>');
        <% } else if (showcontexts) { %>
        userFactory.setJsonPath('/api/user/nodes/<%= context %>?showcontexts=<%= showcontexts %>');
        <% } else if (maxnodes) { %>
        userFactory.setJsonPath('/api/user/nodes/<%= context %>?maxnodes=<%= maxnodes %>');
        userFactory.setMaxNodes('<%= maxnodes %>');
        <% } else { %>
        userFactory.setJsonPath('/api/user/nodes/<%= context %>');
        <% }  %>
    <% } %>

    // Define the settings of the logged in user / not logged in user 
    <% if (locals.user && !locals.vieweduser) { %>
    userFactory.setInLanguage('<%= user.inlanguage %>');
    <% if (locals.user.label_threshold) { %>
    userFactory.setLabelThreshold('<%= user.label_threshold %>');
    <% } %>
        <% if (locals.user.midi) { %>
        userFactory.setMidi('<%= user.midi %>');
        <% } %>
        userFactory.setGraphPalette('<%= user.palette %>');
        <% if (locals.user.maxnodes) { %>
        userFactory.setMaxNodes('<%= user.maxnodes %>');
        <% } %>
        <% if (!background) { %>
        userFactory.setBackground('<%= user.background %>');
        <% } %>
        <% if (locals.user.topnodes) { %>
        userFactory.setMostInfluential('<%= user.topnodes %>');
        <% } %>
    <% } else { %>
        <% if (locals.vieweduser) { %>
            userFactory.setMostInfluential('<%= vieweduser.topnodes %>');
            userFactory.setLabelThreshold('<%= vieweduser.label_threshold %>');
            userFactory.setGraphPalette('<%= vieweduser.palette %>');
            userFactory.setBackground('<%= vieweduser.background %>');
        <% } %>
    <% } %>          
    </script>
    <link rel='stylesheet' href='/stylesheets/jquery.textcomplete.css' />
    <link rel="stylesheet" href="/stylesheets/jquery-ui.min.css">
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <link rel="stylesheet" href="/stylesheets/side-menu.css">
    <link rel="icon" type="image/png" sizes="32x32" href="/images/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/images/favicon-16x16.png">
    <link rel='stylesheet' href='/stylesheets/jquery.taghandler.css' />
    <link rel="stylesheet" type="text/css" href="/stylesheets/tooltipster.css" />
    <link rel="stylesheet" type="text/css" href="/stylesheets/tooltipster-noir.css" />
    <% if (speech) { %>
    <script src="/javascripts/talkify.min.js"></script>
    <%  } %>
    <% if (locals.user) { %>
        <% if (locals.user.midi != undefined && locals.user.midi != 'off') { %>
    <script src="/javascripts/webmidi.min.js"></script>
          <%  } %>
    <%  } %>
    <link rel="stylesheet" href="/stylesheets/bootstrap-tour-standalone.min.css" />
    <script src="/javascripts/bootstrap-tour-standalone.min.js"></script>
    
   
</head>