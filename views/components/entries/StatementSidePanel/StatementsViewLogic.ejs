<script>

        var currentStatementsView = 'OVERVIEW';
    
    
        $("#summary").click(function(e) {
            e.preventDefault();
    
            // // Top influence nodes
            //   console.log(toppbc_nodes);
            //
            // // Top community nodes
            // console.log(topp_communities);
    
            filter_statements_summary(graphFactory.getTopBCNodes(4), graphFactory.getAllCommunities(null, null, 'auto'));
    
            $('#topnav_items').each(function() {
                $("li", this).each(function(i) {
                    $(this).removeClass('pure-menu-selected-top');
                });
            });
            this.className = 'pure-menu-selected-top';
            
            currentStatementsView = 'SUMMARY';
    
        });
    
        $("#insight").click(function(e) {
          
            e.preventDefault();
    
            let insight_nodes = [];
        
            let insight_clusters = graphFactory.getInsightClusters();
            
            for (let el in insight_clusters) {
              insight_nodes.push(insight_clusters[el]);
            }
    
            filter_statements_summary(graphFactory.getTopBCNodes(4), insight_nodes, 'insight');
    
            $('#topnav_items').each(function() {
                $("li", this).each(function(i) {
                    $(this).removeClass('pure-menu-selected-top');
                });
            });
            this.className = 'pure-menu-selected-top';
            // Top community terms
    
            currentStatementsView = 'INSIGHT';
    
    
        });
    
        $("#overview").click(function(e) {
          
            e.preventDefault();
            $('.entry').fadeIn(400);
            $('#topnav_items').each(function() {
                $("li", this).each(function(i) {
                    $(this).removeClass('pure-menu-selected-top');
                });
            });
            this.className = 'pure-menu-selected-top';
            statements().scroll();
    
            if (graphFactory.existPinnedNodes() == true) {
              graphFactory.initPinnedNodes(graphFactory.getPinnedNodes());
            }
            else {
              graph().removeSelections();
            }
            
            $('.summary').remove();
            $('#explanation').hide();
    
            currentStatementsView = 'OVERVIEW';
        });
    
    
        // If the dynamic graph function is on, when the user scrolls the statements, she sees the graph unfold
    
        $("#entries").scroll(function() { //.box is the class of the div
    
            if (dynamic_graph == 1) {
    
              var ventries = [];
              let scroll_signal;
    
                $('#entries').children(".entry").each(function(){
                    var vresult;
                    vresult = checkInView(this,true);
                    if (vresult == true) {
                        if (ventries.indexOf($(this).attr('data-uid')) == -1) {
                            ventries.push($(this).attr('data-uid'));
                        }
                    }
    
                  //  result2 += " " +  checkInView($(e),true);
                });
    
                statements().selectScrolledOnGraph(ventries);
    
                if (!$(this).is(':animated')) {
    
                  var current_scroll = ($(this).scrollTop());
                  var max_scroll = $(this)[0].scrollHeight - $(this).height();
    
                  if (current_scroll == max_scroll && scroll_signal != 'bottom') {
                    $(this).scrollTop(0);
                    scroll_signal = 'top';
                  }
                  else if (current_scroll == 0 && scroll_signal != 'top') {
                    $(this).scrollTop($(this)[0].scrollHeight);
                    scroll_signal = 'bottom';
                  }
    
                }
            }
    
        });
    
    
</script>