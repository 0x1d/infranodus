<div id="entryform" class="editorpane">
    <%- include('./Header',
        {perceivername, addcontext, user, context}); %>

    <%- include('./Footer',
        {perceivername, context, contextpublic}); %>

        <!-- the panel to show content -->
    <%- include('./Body',
        {perceivername, url, urltitle}); %>
</div>

<script>

var currentStatementSidePanelMode = "EDIT"

if (viewType == 'external') {    
    currentStatementSidePanelMode = "SEARCH"
}

changeModeTo(currentStatementSidePanelMode);

function updateStatementSidePanel() {
    if(currentStatementSidePanelMode === "EDIT") switchToEdit()
    if(currentStatementSidePanelMode === "SEARCH") switchToSearch()
    if(currentStatementSidePanelMode === "INTERPRET") switchToInterpret()
}

function switchToSearch() {
    switchStatementMenu('finds');
    sidePanelContent().hide('#edit-panel');
    sidePanelContent().show('#search-panel');
    searchForm().autofill();
    changeEntriesHeight(200)
    hideFooter()
}

function switchToEdit() {
    switchStatementMenu('adds');
    sidePanelContent().hide('#search-panel');
    sidePanelContent().show('#edit-panel');
    // TODO: get the logic from entries.ejs starting from (topmenuaction == 'adds') {
    changeEntriesHeight(400)
    showFooter()
}

function switchToInterpret() {
    // create a new graph
    // add the current (old) context
    // add interpretation functionality 
        // a. remove all visible entries from the "old" context
        // b. switch the way both graph intersection is colored
    // open the page with the parameters above
    navigation().redirect('/<%= user.name %>/meta_<%= context %>/edit?addcontext=<%= context %>&interpret=1');
}

function changeEntriesHeight(height) {
    entries().fillSpace(height);
}

function changeSidePanelHeight(height) {
    sidePanel().resize(height);
}

function switchStatementMenu(element) {
    statementMenu().switch(element);
}

function hideFooter(){
    deleteContextButton().hide()
    privacyLinkButton().hide()
    collaborateButton().hide();
    importLinkButton().hide();
}

function showFooter(){
    deleteContextButton().show()
    privacyLinkButton().show()
    collaborateButton().show();
    importLinkButton().show();
}

function changeModeTo(mode) {
    currentStatementSidePanelMode = mode
    updateStatementSidePanel()
}

function changeModeToSearch() {changeModeTo('SEARCH')}
function changeModeToEdit() {changeModeTo('EDIT')}
function changeModeToInterpret() {changeModeTo('INTERPRET')}
function togglePanel() {
    if (currentStatementSidePanelMode === 'SEARCH') {
        currentStatementSidePanelMode = 'EDIT'
    }
    else if (currentStatementSidePanelMode === 'EDIT') {
        currentStatementSidePanelMode = 'SEARCH';
    }
    changeModeTo(currentStatementSidePanelMode);
}

findsButton().onClick(changeModeToSearch);
editButton().onClick(changeModeToEdit);
interpretButton().onClick(changeModeToInterpret);
minimizeButton().onClick(togglePanel);
closeStatementMenuButton().onClick(hideStatements);


function sidePanelContent() {
    return {
        show: function(element){
            $(element).show();
        },
        hide: function(element){
            $(element).hide();
        }
    }
}

function hideStatements() {
    toggleStatementSidePanel();
}



</script>